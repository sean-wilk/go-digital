################################################################################

  Index

################################################################################

    1a. Potential Hatched Drop Shadow HTML & CSS
    1b. Potential Hatched Drop Shadow HTML & CSS
    2. Code To Manually Add Personally Hosted Web Fonts


********************************************************************************

  1a. Potential Hatched Drop Shadow HTML & CSS

  By Carpendium
  URL: https://www.hongkiat.com/blog/creative-css-shadows/
********************************************************************************

HTML:

  <h1 data-shadow='dang!'>dang!</h1>

CSS:

  @import url(https://fonts.googleapis.com/css?family=Righteous);

  *, *:before, *:after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    position: relative;
    }

  html, body {
    height: 100%;
    }
    body {
      text-align: center;
      background-color: hsla(230,40%,50%,1);
      }
    body:before {
      content: '';
      display: inline-block;
      vertical-align: middle;
      font-size: 0;
      height: 100%;
      }

  h1 {
    display: inline-block;
    color: white;
    font-family: 'Righteous', serif;
    font-size: 12em;
    text-shadow: .03em .03em 0 hsla(230,40%,50%,1);
    }
    h1:after {
      content: attr(data-shadow);
      position: absolute;
      top: .06em; left: .06em;
      z-index: -1;
      text-shadow: none;
      background-image:
        linear-gradient(
          45deg,
          transparent 45%,
          hsla(48,20%,90%,1) 45%,
          hsla(48,20%,90%,1) 55%,
          transparent 0
          );
      background-size: .05em .05em;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;

      animation: shad-anim 15s linear infinite;
      }

  @keyframes shad-anim {
    0% {background-position: 0 0}
    0% {background-position: 100% -100%}
    }

********************************************************************************

  1b. Potential Hatched Drop Shadow HTML & CSS

  By Carpendium
  URL: https://www.hongkiat.com/blog/creative-css-shadows/
********************************************************************************

HTML:

  <div class="funkyBackground dotted">Dotted Shadow</div>

  <div class="funkyBackground striped">Striped Shadow</div>

CSS:

  body {
    width:100%;
    height: 750px;
    background-color: rgba(123, 123, 255, 0.35);
  }

  div {
    height: 250px;
    width: 375px;
    position: absolute;
    text-align: center;
    color: #FFF;
    font-size: 1.5em;
  }

  .dotted {
    top: 50px;
    left: 35vw;
    background-color: #521d5c;
  }
  .striped {
    top: 450px;
    left: 35vw;
    background-color: #521d5c;
  }
  .funkyBackground {
  }
  .funkyBackground:after {
    content: "";
    display: inline-block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 7%;
    left: 5%;
    z-index: -1;
  }
  .dotted:after {
    background-image: -webkit-repeating-radial-gradient(center center, rgba(0,0,0,.2), rgba(0,0,0,.2) 1px, transparent 1.2px, transparent 100%);
    background-image: -moz-repeating-radial-gradient(center center, rgba(0,0,0,.2), rgba(0,0,0,.2) 1px, transparent 1.2px, transparent 100%);
    background-image: -ms-repeating-radial-gradient(center center, rgba(0,0,0,.2), rgba(0,0,0,.2) 1px, transparent 1.2px, transparent 100%);
    background-image: repeating-radial-gradient(center center, rgba(0,0,0,.2), rgba(0,0,0,.2) 1px, transparent 1.2px, transparent 100%);
    -webkit-background-size: 3px 3px;
    -moz-background-size: 3px 3px;
    background-size: 3px 3px;

  }
  .striped:after {
    background-image: -webkit-repeating-linear-gradient(135deg, rgba(0,0,0,.3), rgba(0,0,0,.3) 1px, transparent 2px, transparent 2px, rgba(0,0,0,.3) 3px);
    background-image: -moz-repeating-linear-gradient(135deg, rgba(0,0,0,.3), rgba(0,0,0,.3) 1px, transparent 2px, transparent 2px, rgba(0,0,0,.3) 3px);
    background-image: -o-repeating-linear-gradient(135deg, rgba(0,0,0,.3), rgba(0,0,0,.3) 1px, transparent 2px, transparent 2px, rgba(0,0,0,.3) 3px);
    background-image: repeating-linear-gradient(135deg, rgba(0,0,0,.3), rgba(0,0,0,.3) 1px, transparent 2px, transparent 2px, rgba(0,0,0,.3) 3px);
    -webkit-background-size: 4px 4px;
    -moz-background-size: 4px 4px;
    background-size: 4px 4px;
  }



********************************************************************************

  2. Code To Manually Add Personally Hosted Web Fonts

********************************************************************************

CSS:

  @font-face {
    font-family: 'akkurat-pro-regular';
    src: local('akkurat-pro-regular'), local('AkkuratPro-Regular'),
          url(./fonts/lineto-akkurat-pro-regular.eot) format('embedded-opentype'), /* IE6-IE8 */
          url(./fonts/lineto-akkurat-pro-regular.woff) format('woff'), /* Modern Browsers */
          url(./fonts/lineto-akkurat-pro-regular.ttf) format('truetype'), /* Safari, Android, iOS */
          url(./fonts/lineto-akkurat-pro-regular.svg) format('svg'); /* Legacy iOS */
  }




  import React, { Component } from 'react';
  import MediaQuery from 'react-responsive';

  import Colours from "../../00-style/colours";
  import Breakpoints from "../../00-style/breakpoints";

  class ServiceCard extends Component {

    render() {

      const boxContainer = {
        display: 'block',
        position: 'relative',
        margin: this.props.margin,
        height: this.props.height,
        width: this.props.width,
        maxWidth: this.props.maxWidth,
        flex: '0 0 auto'
      }

      const imageDiv = {
        position: 'absolute',
        top: '0',
        left: '0',
        zIndex: '2',
        borderStyle: 'solid',
        borderWidth: '4px',
        borderColor: Colours.secondary,
        borderRadius: '4px',
        height: this.props.height,
        width: this.props.width,
        maxWidth: this.props.maxWidth,
        display: 'block',
        backgroundColor: Colours.white,
      }

      const titleDiv = {
        position: 'absolute',
        top: '-4px',
        left: '-4px',
        zIndex: '4',
        borderStyle: 'solid',
        borderWidth: '4px',
        borderColor: Colours.primary,
        borderRadius: '0 0 4px 4px',
        backgroundColor: Colours.white,
        color: Colours.secondary,
        height: '25%',
        width: this.props.width,
        maxWidth: this.props.maxWidth,
      }

      const descriptionDiv = {
        position: 'absolute',
        bottom: '-4px',
        left: '-4px',
        zIndex: '3',
        borderStyle: 'solid',
        borderWidth: '4px',
        borderColor: Colours.primary,
        borderRadius: '4px',
        backgroundColor: Colours.white,
        height: '75%',
        width: this.props.width,
        maxWidth: this.props.maxWidth,
        display: 'block',
        overflow: 'scroll'
      }

      const boxText = {
        padding: '8px 16px',
        overflow: 'auto'
      }

      const hatchedShadow = {
        position: 'absolute',
        top: '0',
        left: '0',
        zIndex: '1',
        borderStyle: 'solid',
        borderWidth: '4px',
        borderColor: Colours.secondary,
        borderRadius: '4px',
        background:  `repeating-linear-gradient(45deg, ${Colours.secondary}, ${Colours.secondary} 2px, rgba(255, 255, 255, 0.75) 2px, rgba(255, 255, 255, 0.75) 8px)`,
        margin: `${this.props.shadowMargin}px 0 0 ${this.props.shadowMargin}px`,
        height: this.props.height,
        width: this.props.width,
        maxWidth: this.props.maxWidth,
      }

      return (
        <div  style={boxContainer}
              id={`portfolio-item-${this.props.id}`}
              className='card'>
          <div style={imageDiv} className='card-image'>
            <div style={titleDiv} className='card-title'>
              <div style={boxText}>
                <MediaQuery minWidth={Breakpoints.mobile + 1}>
                  <h3>{this.props.title}</h3>
                </MediaQuery>
                <MediaQuery maxWidth={Breakpoints.mobile}>
                  <h4>{this.props.title}</h4>
                </MediaQuery>
              </div>
            </div>
            <div style={descriptionDiv}>
              <div style={boxText} className='whiteColour card-description'>
                {this.props.clientDescription}
              </div>
            </div>
          </div>
          <div style={hatchedShadow} className='card-shadow'>
          </div>
        </div>
      );
    }
  }

  export default ServiceCard;



  <MediaQuery minWidth={Breakpoints.mobile + 1}>
    <img src={this.props.serviceIcon} style={{...iframe,...{height: `calc(${this.props.height} - ${desktopTitle}em)`,}}} id={`service-icon-${this.props.id}`} alt={`icon for ${this.props.title}`}/>
  </MediaQuery>
  <MediaQuery maxWidth={Breakpoints.mobile}>
    <img src={this.props.serviceIcon} style={{...iframe,...{height: `calc(${this.props.height} - ${mobileTitle}em)`,}}} id={`service-icon-${this.props.id}`} alt={`icon for ${this.props.title}`}/>
  </MediaQuery>
