@font-face {
    font-family: 'background icons';
    src: url('../../01-atom/backgrounds/fonts/background-icons.eot');
    src: url('../../01-atom/backgrounds/fonts/background-icons.eot?#iefix') format('embedded-opentype'),
         url('../../01-atom/backgrounds/fonts/background-icons.woff') format('woff'),
         url('../../01-atom/backgrounds/fonts/background-icons.ttf') format('truetype'),
         url('../../01-atom/backgrounds/fonts/background-icons.svg#background-icons') format('svg');
    font-weight: normal;
    font-style: normal;
}
[class*='icon-']:before{
	display: inline-block;
   font-family: 'background icons';
   font-style: normal;
   font-weight: normal;
   line-height: 1;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale
}

$primary-color: #1D2D58;
$secondary-color: #B64F59;

.background {

    .inner-background {
        width: 100%;
        height: 100%;
        margin: 0 auto;
    }

    .button {
        font: 400 1rem 'Rubik', Helvetica, sans-serif;
        color: $primary-color;
        background-color: rgba(#fff, 0.75);
        text-align: center;
        margin: 0 auto;
        padding: 1.5em 1em;
        border-radius: 4px;
        text-decoration: none;
        cursor: pointer;
        display: block;
        position: relative;
        width: 200px;
        z-index: 100;
        text-transform: uppercase;
        transition: ease-in 0.3s;

        &:hover {
            background-color: #fff;
            box-shadow: 0px 10px 14px -3px rgba(0,0,0,0.2);
            transition: all 0.3s;
        }
    }
}

.shape {
    margin: 0 auto;
    position: relative;
}

.random-shape:after {
    font-family: 'background icons';
    content: "\0041";
}

$circle-size: 50px;
$colors: $secondary-color;
$shapes: '\0041', '\0042', '\0043', '\0044';

$shape-count-mobile: 25;
$shape-count-tablet: 40;
$shape-count-desktop: 50;
$shape-count-max: 50;

$mobile-breakpoint: 540px;
$mobile-breakpoint-min1: 539px;
$desktop-breakpoint: 960px;
$desktop-breakpoint-min1: 959px;

@media screen and (min-width: $desktop-breakpoint) {
    @for $i from 1 through $shape-count-desktop {
        $shape-opacity: random(5);
        $rotation: random(360);
        $speed: 400 + random(10);
        $color-key: random( length($colors) );
        $shape-color: nth( $colors, $color-key );
        $shape-key: random( length($shapes) );
        $shape-type: nth( $shapes, $shape-key );
        $text: random(10);
        $positionx: random(100);
        $positiony: random(100);
        $width: random(100);

        @keyframes shape-#{$i} {
            0% {
                transform: translate3d(0,0,0) rotate(#{$rotation + 0}deg);
            }
            100% {
                transform: translate3d(0,0,0) rotate(#{$rotation + 360}deg);
            }
        }

        .shape-container--#{$i} {
            animation: shape-#{$i} #{$speed}s infinite linear;
            position: absolute;
            top: #{$positiony}vh;
            left: #{$positionx - ((50 + $width)/2)}vw;
            width: #{50 + $width}vw;
            height:auto;

            .random-shape:after {
                margin: 3rem;
                color: $shape-color;
                font-size: 3em;
                opacity: #{0.5 + $shape-opacity * 0.1};
                content: $shape-type;
            }
        }
    }
}

@media screen and (min-width: $mobile-breakpoint) and (max-width: $desktop-breakpoint-min1) {
    @for $i from 1 through $shape-count-tablet {
        $shape-opacity: random(5);
        $rotation: random(360);
        $speed: 400 + random(10);
        $color-key: random( length($colors) );
        $shape-color: nth( $colors, $color-key );
        $shape-key: random( length($shapes) );
        $shape-type: nth( $shapes, $shape-key );
        $text: random(10);
        $positionx: random(100);
        $positiony: random(100);
        $width: random(100);

        @keyframes shape-#{$i} {
            0% {
                transform: translate3d(0,0,0) rotate(#{$rotation + 0}deg);
            }
            100% {
                transform: translate3d(0,0,0) rotate(#{$rotation + 360}deg);
            }
        }

        .shape-container--#{$i} {
            animation: shape-#{$i} #{$speed}s infinite linear;
            position: absolute;
            top: #{$positiony}vh;
            left: #{$positionx - ((50 + $width)/2)}vw;
            width: #{50 + $width}vw;
            height:auto;

            .random-shape:after {
                margin: 3rem;
                color: $shape-color;
                font-size: 3em;
                opacity: #{0.5 + $shape-opacity * 0.1};
                content: $shape-type;
            }
        }
    }
    @for $i from $shape-count-tablet through $shape-count-max {

        .shape-container--#{$i} {
            display: none;
            .random-shape:after {
                display: none;
            }
        }
    }
}

@media screen and (max-width: $mobile-breakpoint-min1) {
    @for $i from 1 through $shape-count-mobile {
        $shape-opacity: random(5);
        $rotation: random(360);
        $speed: 400 + random(10);
        $color-key: random( length($colors) );
        $shape-color: nth( $colors, $color-key );
        $shape-key: random( length($shapes) );
        $shape-type: nth( $shapes, $shape-key );
        $text: random(10);
        $positionx: random(100);
        $positiony: random(100);
        $width: random(100);

        @keyframes shape-#{$i} {
            0% {
                transform: translate3d(0,0,0) rotate(#{$rotation + 0}deg);
            }
            100% {
                transform: translate3d(0,0,0) rotate(#{$rotation + 360}deg);
            }
        }

        .shape-container--#{$i} {
            animation: shape-#{$i} #{$speed}s infinite linear;
            position: absolute;
            top: #{$positiony}vh;
            left: #{$positionx - ((50 + $width)/2)}vw;
            width: #{50 + $width}vw;
            height:auto;

            .random-shape:after {
                margin: 3rem;
                color: $shape-color;
                font-size: 3em;
                opacity: #{0.5 + $shape-opacity * 0.1};
                content: $shape-type;
            }
        }
    }
    @for $i from $shape-count-mobile through $shape-count-max {

        .shape-container--#{$i} {
            display: none;
            .random-shape:after {
                display: none;
            }
        }
    }
}


.stop-shape  {
    -webkit-animation-play-state: paused;
    animation-play-state: paused;
}
